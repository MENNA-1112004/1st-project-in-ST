import numpy as np
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image

# Load the trained model
model = load_model("keras_model.h5")

# Load class labels (Male / Female)
with open("labels.txt", "r") as f:
    class_names = [line.strip() for line in f.readlines()]

# Function to predict gender from an image
def predict_gender(img_path):
    # Load and preprocess the image
    img = image.load_img(img_path, target_size=(224, 224))
    img_array = image.img_to_array(img) / 255.0  # normalize to [0,1]
    img_array = np.expand_dims(img_array, axis=0)  # add batch dimension

    # Make prediction
    prediction = model.predict(img_array)
    print("Raw prediction values:", prediction)   # show raw values for debugging
    class_index = np.argmax(prediction)           # get class with highest probability
    confidence = np.max(prediction)               # confidence score

    return class_names[class_index], confidence

# Ask user for the image to test
img_path = input("Enter the image file name (e.g., test_male.jpg): ")

# Run prediction
result, confidence = predict_gender(img_path)
print(f"Predicted Gender: {result} ({confidence*100:.2f}%)")


